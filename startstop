#!/bin/bash

# Semi Universal start-stop script

HOSTNAME=$(hostname)
PIDFILE=/var/run/tcollector.pid
PROG=/usr/local/tcollector/tcollector.py
LOG=/var/log/tcollector.log
ARGS="-c /usr/local/tcollector/collectors -H tsd.sv4.stumble.net -t host=$HOSTNAME -P $PIDFILE"

which_python () {
    if [[ -x /usr/bin/python2.6 ]]; then
        echo "/usr/bin/python2.6"
        return
    fi
    if [[ -x /usr/bin/python2.5 ]]; then
        echo "/usr/bin/python2.5"
        return
    fi
    if [[ -x /usr/bin/python ]]; then
        echo "/usr/bin/python"
        return
    fi
    echo >&2 "Python is not installed"
    exit 1
}

PYTHON=$(which_python)

start () {
    echo "Starting $PROG"
    $PYTHON $PROG $ARGS >> $LOG 2>&1 &
}

stop () {
    echo "Stopping $PROG"
    if [[ -r "$PIDFILE" ]]; then
        PID=$(< "$PIDFILE")
        kill $1 $PID
        sleep 1
    fi
    # Check also for instances not started with a pidfile
    # include only python processes
    pgrep -f "/usr/bin/python.* $PROG -c" |grep -vw "$PID" | xargs -r kill $1
}

status () {
    if [[ -r "$PIDFILE" ]]; then
        if kill -0 $(< $PIDFILE) 2>/dev/null; then
            echo "$PROG" running
            return 0
        fi
    fi
    if [[ -n $(pgrep -f "/usr/bin/python.* $PROG -c") ]]; then
        echo "$PROG" running
        return 0
    fi
    return 1
}

forcerestart () {
    stop
    try=1
    sleep 1
    while status; do
        try=$((try + 1))
        if [[ $try -gt 3 ]]; then
            stop -9
        else
            stop
        fi
        echo "Waiting for $PROG to die.."
        sleep 5
    done
    start
}

case $1 in
    start)  status || start
        ;;
    force-restart)
        forcerestart
        ;;
    restart)
        # tcollector already respawns collectors if they
        # have changed on-disk, and kills old ones/starts
        # new ones.  The only thing tcollector doesn't do
        # is restart itself if itself has changed. For a more
        # graceful restart, just make sure we're running and
        # restart only if tcollector is newer on disk than
        # since it started.  This doesn't check for dependencies
        # like asyncproc.py, but that's ok.
        if status; then
            newer=$(find $PROG -newer $PIDFILE | wc -l)
            if [[ $newer -gt 0 ]]; then
                forcerestart
            fi
        else
            start
        fi
        ;;
    stop) stop
        ;;
    status) status
            exit $?
        ;;
    *)  echo >&2 "usage: $0 <start|stop|restart|status|force-restart>"
        exit 1
        ;;
esac
