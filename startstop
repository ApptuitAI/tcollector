#!/bin/bash

# Semi Universal start-stop script

HOSTNAME=$(hostname)
PIDFILE=/var/run/tcollector.pid
PROG=/usr/local/tcollector/tcollector.py
LOG=/var/log/tcollector.log
ARGS="-c /usr/local/tcollector/collectors -H tsd.sv4.stumble.net -t host=$HOSTNAME -P $PIDFILE"

which_python () {
    if [[ -x /usr/bin/python2.6 ]]; then
        echo "/usr/bin/python2.6"
        return
    fi
    if [[ -x /usr/bin/python2.5 ]]; then
        echo "/usr/bin/python2.5"
        return
    fi
    if [[ -x /usr/bin/python ]]; then
        echo "/usr/bin/python"
        return
    fi
    echo >&2 "Python is not installed"
    exit 1
}

PYTHON=$(which_python)

start () {
    echo "Starting $PROG"
    $PYTHON $PROG $ARGS >> $LOG 2>&1 &
}

stop () {
    echo "Stopping $PROG"
    if [[ -r "$PIDFILE" ]]; then
        PID=$(< "$PIDFILE")
        kill $PID
        sleep 1
    fi
    # Check also for instances not started with a pidfile
    # include only python processes
    pgrep -f "/usr/bin/python.* $PROG -c" |grep -vw "$PID" | xargs -r kill
}

status () {
    if [[ -r "$PIDFILE" ]]; then
        if kill -0 $(< $PIDFILE) 2>/dev/null; then
            echo "$PROG" running
            return 0
        fi
    fi
    if [[ -n $(pgrep -f "/usr/bin/python.* $PROG -c") ]]; then
        echo "$PROG" running
        return 0
    fi
    return 1
}


case $1 in
    start)  status || start
        ;;
    restart)
            stop
            while status; do
                echo "Waiting for $PROG to die.."
                sleep 1
                stop
            done
            start
        ;;
    stop) stop
        ;;
    status) status
            exit $?
        ;;
esac
