#!/bin/sh
#
# xcollector   Startup script for the xcollector monitoring agent
#
# chkconfig:   2345 15 85
# description: XCollector - Data collection agent for apptuit.ai
# processname: xcollector
# pidfile: /var/run/xcollector/xcollector.pid
#
### BEGIN INIT INFO
# Provides:          xcollector
# Required-Start:    $network $remote_fs
# Required-Stop:     $network $remote_fs
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: XCollector - Data collection agent for apptuit.ai
### END INIT INFO

WORKING_DIR=/usr/local/xcollector
COLLECTOR_PATH=${WORKING_DIR}/collectors
CONFIG_DIR=${WORKING_DIR}/conf
#RUN_AS_USER=
#RUN_AS_GROUP=

PYTHONPATH="$PYTHONPATH:${WORKING_DIR}"
PATH=/sbin:/bin:/usr/sbin:/usr/bin
DAEMON="${WORKING_DIR}/xcollector.py"
EXTRA_TAGS=""

. /lib/lsb/init-functions

if [ -r /etc/default/xcollector ]; then
    . /etc/default/xcollector
fi

PIDFILE=${PIDFILE-"/var/run/xcollector/xcollector.pid"}
LOGFILE=${LOGFILE-"/var/log/xcollector/xcollector.log"}
THIS_HOST=`hostname`
RUN_AS_USER=${RUN_AS_USER-xcollector}
RUN_AS_GROUP=${RUN_AS_GROUP-xcollector}

EXTRA_TAGS_OPTS=""
for TV in $EXTRA_TAGS; do
    EXTRA_TAGS_OPTS=${EXTRA_TAGS_OPTS}" -t ${TV}"
done

sanity_check() {
  for file in "$PIDFILE" "$LOGFILE"; do
    parentdir=`dirname "$file"`
    if [ ! -d "$parentdir" ]; then
      install -m 755 -o $RUN_AS_USER -g $RUN_AS_GROUP -d $parentdir
    fi
  done
}

case $1 in
    start)
        log_daemon_msg "Starting xcollector"
        sanity_check || return $?
        find "$COLLECTOR_PATH" -name '*.pyc' -delete

        taskset=""
        if [ -n "$CPU_LIST" ]; then
            if which taskset &>/dev/null; then
                taskset="taskset -c $CPU_LIST"
            else
                log_warning_msg "taskset not found, xcollector can't be"
                    " pinned to $CPU_LIST"
            fi
        fi

        PYTHONPATH=$PYTHONPATH $taskset start-stop-daemon --start --quiet -u $RUN_AS_USER\
            --pidfile "$PIDFILE" --chuid $RUN_AS_USER:$RUN_AS_GROUP\
            --startas $DAEMON -- \
            -t host=$THIS_HOST \
            -P "$PIDFILE" --daemonize $EXTRA_TAGS_OPTS

        log_end_msg $?
        ;;

    stop)
        log_daemon_msg "Stopping xcollector"
        if [ ! -f "$PIDFILE" ]; then
            log_failure_msg "$PIDFILE doesn't exist. xcollector not running?"
            exit 0
        fi
        start-stop-daemon --stop --retry 30 --quiet --oknodo -u $RUN_AS_USER --pidfile "$PIDFILE" && rm -f "$PIDFILE"
        rv=$?
        log_end_msg 0
        exit $rv
        ;;
    restart)
        $0 stop && $0 start
        ;;

    status)
        status_of_proc -p $PIDFILE "$DAEMON" "xcollector"
        exit $?
        ;;

    *)
        echo "Usage: $0 {start|stop|restart|status}"
        exit 2
        ;;
esac
